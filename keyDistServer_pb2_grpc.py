# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import keyDistServer_pb2 as keyDistServer__pb2


class ConnectStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConnectNew = channel.unary_unary(
                '/Connect/ConnectNew',
                request_serializer=keyDistServer__pb2.Info.SerializeToString,
                response_deserializer=keyDistServer__pb2.Creds.FromString,
                )
        self.Authenticate = channel.unary_unary(
                '/Connect/Authenticate',
                request_serializer=keyDistServer__pb2.AuthRequestEncrypted.SerializeToString,
                response_deserializer=keyDistServer__pb2.AuthResponse.FromString,
                )
        self.GetServerInfo = channel.unary_unary(
                '/Connect/GetServerInfo',
                request_serializer=keyDistServer__pb2.InfoRequest.SerializeToString,
                response_deserializer=keyDistServer__pb2.InfoResponse.FromString,
                )


class ConnectServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConnectNew(self, request, context):
        """Gives unique keys to servers or terminals trying to connect
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Authenticate with KDS 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServerInfo(self, request, context):
        """Get connected servers info
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConnectServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConnectNew': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectNew,
                    request_deserializer=keyDistServer__pb2.Info.FromString,
                    response_serializer=keyDistServer__pb2.Creds.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=keyDistServer__pb2.AuthRequestEncrypted.FromString,
                    response_serializer=keyDistServer__pb2.AuthResponse.SerializeToString,
            ),
            'GetServerInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServerInfo,
                    request_deserializer=keyDistServer__pb2.InfoRequest.FromString,
                    response_serializer=keyDistServer__pb2.InfoResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Connect', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Connect(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConnectNew(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Connect/ConnectNew',
            keyDistServer__pb2.Info.SerializeToString,
            keyDistServer__pb2.Creds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Connect/Authenticate',
            keyDistServer__pb2.AuthRequestEncrypted.SerializeToString,
            keyDistServer__pb2.AuthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServerInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Connect/GetServerInfo',
            keyDistServer__pb2.InfoRequest.SerializeToString,
            keyDistServer__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
